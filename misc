# Call and Response --------------------------------------------------------------------

# Ruby is less concerned about what kind of thing an object is 
# and only really cares about what method calls it responds to.

# .respond_to? takes a symbol and returns true if an object can receive that method, and false otherwise.

[1, 2, 3].respond_to?(:push)
# Would return true, since you can call .push on an array object.

[1, 2, 3].respond_to?(:to_sym)
# Would return false, since you can't turn an array into a symbol.

----------------------------------------------------------------------------------------
# Push method --------------------------------------------------------------------

alphabet = ["a", "b", "c"]
alphabet.push("d")

# Is the same as:

alphabet = ["a", "b", "c"]
alphabet << ("d")

# AND...

caption = "A giraffe surrounded by "
caption += "weezards!"

# Is the same as:

caption = "A giraffe surrounded by "
caption << "weezards!" 

# Instead of typing out the .push method name, you can simply use <<, 
# the concatenation operator (also known as "the shovel") to add an element to the end of an array.
